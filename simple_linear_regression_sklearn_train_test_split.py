# -*- coding: utf-8 -*-
"""simple_linear_regression_sklearn_train_test_split.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BPRpuTImXMKvPqBkbkUdTeqe5KirNczO
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

df = pd.read_csv('Salary.csv')
df.head()

df.shape

df['YearsExperience'].corr(df['Salary'])

X = df.iloc[:, :-1].values
y = df.iloc[:, -1].values

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.4, random_state = 42)

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

train_score = regressor.score(X_train,y_train)
test_score = regressor.score(X_test,y_test)
print("Train Set Score: {}% ".format((train_score*100).round(2)))
print("Test Set Score: {}% ".format((test_score*100).round(2)))

y_pred = regressor.predict(X_test)

plt.scatter(X_train, y_train)
plt.scatter(X_test, y_test)
plt.plot(X_train, regressor.predict(X_train))
plt.title('Salary vs Experience')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()

regressor.predict(np.array([[5]]))

from sklearn import metrics  
abs_e = metrics.mean_absolute_error(y_test, y_pred)
print('Mean Absolute Error: {} '.format(abs_e.astype(int)))

mse = metrics.mean_squared_error(y_test, y_pred)
print('Mean Squared Error: {} '.format(mse.astype(int)))

